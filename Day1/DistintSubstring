class Solution {
    public int countDistinct(String s) {
        int count = 0;
		STrie root = new STrie();
		
		for (int i=s.length()-1;i>=0;i--) {
			count += root.insert(s.substring(i));
		}
		return count;
	}

}

class STrie {
	STrie[] children = null;

	public STrie() {
		super();
		this.children = new STrie[26];
	}
	
	public int insert(String word) {
		int c = 0;
		int n = word.length();
		STrie node = this;
		
		for (int i=0;i<n;i++) {
			if (node.children[word.charAt(i)-'a'] == null) {
				c++;
				node.children[word.charAt(i)-'a'] = new STrie();
			}
			node = node.children[word.charAt(i)-'a'];
		}
		
		return c;
	}
	
}
